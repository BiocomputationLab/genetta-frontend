version: '3.8'
services:
  application:
    build: .
    ports:
      - '5000:5000'
    environment:
      NEO4J_HOST: database
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    env_file:
      - 'docker_env_genetta'
    restart: on-failure
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_started

  database:
    image: neo4j:latest
    env_file:
      - 'docker_env_neo4j'
    volumes:
      - dbdata:/data
    ports:
      - '7474:7474'
      - '7687:7687'
    healthcheck:
      test: wget http://localhost:7474 || exit 1
      interval: 1s
      timeout: 10s
      retries: 30
      start_period: 5s

  redis:
    image: redis:latest
    ports:
      - '6379:6379'

  celeryworker:
    build: .
    command: celery -A router.celery worker --loglevel=info
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    env_file:
      - 'docker_env_genetta'
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_started
    restart: on-failure

      
volumes:
  dbdata: